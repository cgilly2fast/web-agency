/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    media: Media;
    pages: Page;
    blogs: Blog;
    tenants: Tenant;
    headers: Header;
    footers: Footer;
    'calendar-settings': CalendarSetting;
    'chat-settings': ChatSetting;
    segments: Segment;
    forms: Form;
    'form-submissions': FormSubmission;
    'appointment-templates': AppointmentTemplate;
    meetings: Meeting;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  tenant?: (string | null) | Tenant;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    main?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    preview?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  name: string;
  domain: string;
  logo?: (string | null) | Media;
  logoDarkMode?: (string | null) | Media;
  icon?: (string | null) | Media;
  iconDarkMode?: (string | null) | Media;
  favicon?: (string | null) | Media;
  ogImage?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  slug?: string | null;
  tenant?: (string | null) | Tenant;
  richText?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: string;
  slug: string;
  name: string;
  subtitle?: string | null;
  author: {
    relationTo: 'users';
    value: string | User;
  };
  featuredContent: string | Media;
  time: number;
  tags?:
    | {
        tagName?: string | null;
        id?: string | null;
      }[]
    | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  tenant?: (string | null) | Tenant;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  avatar?: (string | null) | Media;
  firstName?: string | null;
  lastName?: string | null;
  roles: ('super-admin' | 'user' | 'domains-api')[];
  tenant: string | Tenant;
  tenantRole: 'admin' | 'user';
  lastLoggedInTenant?: (string | null) | Tenant;
  google?: string | null;
  microsoft?: string | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "headers".
 */
export interface Header {
  id: string;
  logo?: (string | null) | Media;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
          appearance?: ('default' | 'primary' | 'secondary') | null;
        };
        id?: string | null;
      }[]
    | null;
  tenant?: (string | null) | Tenant;
  ctaText: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footers".
 */
export interface Footer {
  id: string;
  logo?: (string | null) | Media;
  navItemsColumns?:
    | {
        navItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: string | Page;
                } | null;
                url?: string | null;
                label: string;
                appearance?: ('default' | 'primary' | 'secondary') | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  tenant?: (string | null) | Tenant;
  socials?:
    | {
        socialUrl: string;
        socialIcon: string | Media;
        id?: string | null;
      }[]
    | null;
  ctaText: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "calendar-settings".
 */
export interface CalendarSetting {
  id: string;
  tenant?: (string | null) | Tenant;
  bufferTime?:
    | (
        | '0 min'
        | '5 min'
        | '10 min'
        | '15 min'
        | '30 min'
        | '45 min'
        | '1 hr'
        | '1 hr 30 min'
        | '2 hrs'
        | '2hrs 30 min'
        | '3 hrs'
      )
    | null;
  daysOutType?: ('rolling' | 'date_range' | 'indefinitely') | null;
  incrementTime?: number | null;
  incrementUnit?: ('min' | 'hrs') | null;
  user: string | User;
  twoWaySync?: boolean | null;
  days?: ('monday' | 'tuesday' | 'Wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday')[] | null;
  monday?:
    | {
        startTime?: string | null;
        endTime?: string | null;
        id?: string | null;
      }[]
    | null;
  tuesday?:
    | {
        startTime?: string | null;
        endTime?: string | null;
        id?: string | null;
      }[]
    | null;
  wednesday?:
    | {
        startTime?: string | null;
        endTime?: string | null;
        id?: string | null;
      }[]
    | null;
  thursday?:
    | {
        startTime?: string | null;
        endTime?: string | null;
        id?: string | null;
      }[]
    | null;
  friday?:
    | {
        startTime?: string | null;
        endTime?: string | null;
        id?: string | null;
      }[]
    | null;
  saturday?:
    | {
        startTime?: string | null;
        endTime?: string | null;
        id?: string | null;
      }[]
    | null;
  Sunday?:
    | {
        startTime?: string | null;
        endTime?: string | null;
        id?: string | null;
      }[]
    | null;
  lunchHours?: {
    startTime?: string | null;
    endTime?: string | null;
  };
  minNoticeUnit?: ('minutes' | 'hours' | 'days')[] | null;
  minNoticeTime?: number | null;
  rollingUnit?: ('calendar_days' | 'weekdays') | null;
  rollingTime?: number | null;
  timezone?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chat-settings".
 */
export interface ChatSetting {
  id: string;
  active?: boolean | null;
  form?: (string | null) | Form;
  agentName?: string | null;
  picture?: (string | null) | Media;
  tenant?: (string | null) | Tenant;
  previewType?: ('image' | 'video') | null;
  previewImage?: (string | null) | Media;
  previewVideo?: (string | null) | Media;
  introType?: ('video' | 'direct') | null;
  introVideo?: (string | null) | Media;
  introOptions?:
    | {
        option?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            basePrice?: number | null;
            priceConditions?:
              | {
                  fieldToUse?: string | null;
                  condition?: ('hasValue' | 'equals' | 'notEquals') | null;
                  valueForCondition?: string | null;
                  operator?: ('add' | 'subtract' | 'multiply' | 'divide') | null;
                  valueType?: ('static' | 'valueOfField') | null;
                  valueForOperator?: string | null;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'payment';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "segments".
 */
export interface Segment {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  payment?: {
    field?: string | null;
    status?: string | null;
    amount?: number | null;
    paymentProcessor?: string | null;
    creditCard?: {
      token?: string | null;
      brand?: string | null;
      number?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "appointment-templates".
 */
export interface AppointmentTemplate {
  id: string;
  title: string;
  duration?: ('15 min' | '30 min' | '45 min' | '60 min' | 'Custom') | null;
  durationTime?: number | null;
  durationUnit?: ('min' | 'hrs') | null;
  location: 'in_person' | 'zoom' | 'google_meet' | 'phone_call';
  hosts: string | User;
  invites?: boolean | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  daysOutType?: ('rolling' | 'date_range' | 'indefinitely') | null;
  rollingTime?: number | null;
  rollingUnit?: ('calendar_days' | 'weekdays') | null;
  dateRangeStart?: string | null;
  dateRangeEnd?: string | null;
  limits?: {
    bufferTimeBefore?:
      | (
          | '0 min'
          | '5 min'
          | '10 min'
          | '15 min'
          | '30 min'
          | '45 min'
          | '1 hr'
          | '1 hr 30 min'
          | '2 hrs'
          | '2hrs 30 min'
          | '3 hrs'
        )
      | null;
    bufferTimeAfter?:
      | (
          | '0 min'
          | '5 min'
          | '10 min'
          | '15 min'
          | '30 min'
          | '45 min'
          | '1 hr'
          | '1 hr 30 min'
          | '2 hrs'
          | '2hrs 30 min'
          | '3 hrs'
        )
      | null;
    minNoticeUnit?: ('minutes' | 'hours' | 'days')[] | null;
    minNoticeTime?: number | null;
    dailyLimit?: number | null;
  };
  options?: {
    timezoneDisplay?: ('invitees' | 'lock') | null;
    increments?: ('5 min' | '10 min' | '15 min' | '20 min' | '30 min' | '45 min' | '60 min' | 'Custom') | null;
    incrementTime?: number | null;
    incrementUnit?: ('min' | 'hrs') | null;
  };
  link?: string | null;
  bookingForm?: {
    fields?:
      | (
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              required?: boolean | null;
              defaultValue?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'checkbox';
            }
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              required?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'country';
            }
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              required?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'email';
            }
          | {
              message?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'message';
            }
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              defaultValue?: number | null;
              required?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'number';
            }
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              defaultValue?: string | null;
              options?:
                | {
                    label: string;
                    value: string;
                    id?: string | null;
                  }[]
                | null;
              required?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'select';
            }
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              required?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'state';
            }
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              defaultValue?: string | null;
              required?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'text';
            }
          | {
              name: string;
              label?: string | null;
              width?: number | null;
              defaultValue?: string | null;
              required?: boolean | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textarea';
            }
        )[]
      | null;
    payment?: string | null;
  };
  confirmation?: {
    confirmationType?: ('message' | 'redirect') | null;
    confirmationMessage?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    url?: string | null;
  };
  replyToAddress?: ('host' | 'no-reply') | null;
  confirmationNotif?: {
    confirmType?: ('calendar' | 'email') | null;
    calendarInvitation?: {
      title?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      body?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
    };
    emailConfirmation?: {
      replyToAddress?: ('host' | 'no-reply') | null;
      subject?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      body?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
    };
    emailCancelation?: {
      subject?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      body?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
    };
  };
  scheduledNotifs?: {
    emailReminders?: {
      active?: boolean | null;
      subject?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      body?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      timing?:
        | {
            time?: number | null;
            unit?: ('min' | 'hrs') | null;
            id?: string | null;
          }[]
        | null;
    };
    textReminders?: {
      active?: boolean | null;
      message?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      timing?:
        | {
            time?: number | null;
            unit?: ('min' | 'hrs') | null;
            id?: string | null;
          }[]
        | null;
    };
    emailFollowUp?: {
      active?: boolean | null;
      subject?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      body?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      timing?:
        | {
            time?: number | null;
            unit?: ('min' | 'hrs') | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  cancelationPolicy?: string | null;
  tenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meetings".
 */
export interface Meeting {
  id: string;
  form: string | AppointmentTemplate;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'blogs';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'tenants';
        value: string | Tenant;
      } | null)
    | ({
        relationTo: 'headers';
        value: string | Header;
      } | null)
    | ({
        relationTo: 'footers';
        value: string | Footer;
      } | null)
    | ({
        relationTo: 'calendar-settings';
        value: string | CalendarSetting;
      } | null)
    | ({
        relationTo: 'chat-settings';
        value: string | ChatSetting;
      } | null)
    | ({
        relationTo: 'segments';
        value: string | Segment;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'appointment-templates';
        value: string | AppointmentTemplate;
      } | null)
    | ({
        relationTo: 'meetings';
        value: string | Meeting;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}